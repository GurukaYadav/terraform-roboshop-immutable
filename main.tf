module "vpc" {
  source = "github.com/GurukaYadav/tf-module-vpc"
  VPC_CIDR = var.VPC_CIDR
  PROJECT = var.PROJECT
  ENV = var.ENV
  PUBLIC_SUBNET_CIDR = var.PUBLIC_SUBNET_CIDR
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  PUBLIC_SUBNETS_AZ = var.PUBLIC_SUBNETS_AZ
  PRIVATE_SUBNETS_AZ = var.PRIVATE_SUBNETS_AZ
  DEFAULT_VPC_ID = var.DEFAULT_VPC_ID
  DEFAULT_VPC_CIDR = var.DEFAULT_VPC_CIDR
  DEFAULT_VPC_RT = var.DEFAULT_VPC_RT
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
}

module "rds" {
  source = "github.com/GurukaYadav/tf-module-rds"
  PROJECT = var.PROJECT
  ENV = var.ENV
  DB_NAME                  = var.DB_NAME
  ENGINE               = var.RDS_ENGINE
  ENGINE_VERSION       = var.RDS_ENGINE_VERSION
  INSTANCE_CLASS   = var.RDS_INSTANCE_CLASS
  //PARAMETER_GROUP_NAME = var.PARAMETER_GROUP_NAME
  VPC_ID = module.vpc.VPC_ID
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = var.RDS_PORT
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  PG_FAMILY = var.RDS_PG_FAMILY
  WORKSTATION_IP = var.WORKSTATION

}

module "docdb" {
  source = "github.com/GurukaYadav/tf-module-docdb"
  PROJECT = var.PROJECT
  ENV = var.ENV
  ENGINE = var.DOC_DB_ENGINE
  ENGINE_VERSION = var.DOC_DB_ENGINE_VERSION
  INSTANCE_CLASS = var.DOC_DB_INSTANCE_CLASS
  PG_FAMILY      = var.DOC_DB_PG_FAMILY
  PRIVATE_SUBNET_ID     = module.vpc.PRIVATE_SUBNET_ID
  VPC_ID = module.vpc.VPC_ID
  PORT  = var.DOC_DB_PORT
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  NO_OF_NODES = var.DOC_DB_NO_OF_NODES
  WORKSTATION_IP = var.WORKSTATION
}

module "elasticache" {
  source = "github.com/GurukaYadav/tf-module-elasticache"
  ENGINE = var.ELASTICACHE_ENGINE
  ENGINE_VERSION = var.ELASTICACHE_ENGINE_VERSION
  INSTANCE_CLASS = var.ELASTICACHE_INSTANCE_CLASS
  NO_OF_NODES    = var.ELASTICACHE_NO_OF_NODES
  PORT   = var.ELASTICACHE_PORT
  PG_FAMILY = var.ELASTICACHE_PG_FAMILY
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  VPC_ID = module.vpc.VPC_ID
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  PROJECT = var.PROJECT
  ENV = var.ENV

}

module "rabbitmq" {
  source = "github.com/GurukaYadav/tf-module-rabbitmq"
  INSTANCE_TYPE = var.RABBITMQ_INSTANCE_TYPE
  VPC_ID = module.vpc.VPC_ID
  PORT = var.RABBITMQ_PORT
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
}

module "lb" {
  source = "github.com/GurukaYadav/tf-module-mutable-lb"
  VPC_ID = module.vpc.VPC_ID
  PUB_PORT = var.PUB_PORT
  PRI_PORT = var.PRI_PORT
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PUBLIC_SUBNET_ID = module.vpc.PUBLIC_SUBNET_ID
  PROJECT = var.PROJECT
  ENV = var.ENV
  PUBLIC_HOSTED_ZONE_ID = var.PUBLIC_HOSTED_ZONE_ID

}

module "FRONTEND" {
  depends_on = [module.CART,module.CATALOGUE,module.USER,module.SHIPPING,module.PAYMENT,module.DISPATCH]
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["FRONTEND"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "80"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "frontend"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = concat(module.vpc.PUBLIC_SUBNET_CIDR, module.vpc.PRIVATE_SUBNET_CIDR)
  AGS_DESIRED = var.INSTANCE["FRONTEND"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["FRONTEND"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["FRONTEND"]["AGS_MIN"]
  LB_ARN = module.lb.PUBLIC_LB_ARN
  LB_TYPE = "public"
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"


}

module "CART" {
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["CART"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "8080"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "cart"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  AGS_DESIRED = var.INSTANCE["CART"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["CART"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["CART"]["AGS_MIN"]
  LB_TYPE = "private"
  LB_ARN = module.lb.PRIVATE_LB_ARN
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  REDIS_ENDPOINT = module.elasticache.REDIS_ENDPOINT
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"


}

module "CATALOGUE" {
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["CATALOGUE"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "8080"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "catalogue"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  AGS_DESIRED = var.INSTANCE["CATALOGUE"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["CATALOGUE"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["CATALOGUE"]["AGS_MIN"]
  LB_TYPE = "private"
  LB_ARN = module.lb.PRIVATE_LB_ARN
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  DOCDB_ENDPOINT = module.docdb.DOCDB_ENDPOINT
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"

}

module "USER" {
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["USER"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "8080"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "user"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  AGS_DESIRED = var.INSTANCE["USER"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["USER"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["USER"]["AGS_MIN"]
  LB_TYPE = "private"
  LB_ARN = module.lb.PRIVATE_LB_ARN
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  DOCDB_ENDPOINT = module.docdb.DOCDB_ENDPOINT
  REDIS_ENDPOINT = module.elasticache.REDIS_ENDPOINT
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"

}

module "SHIPPING" {
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["SHIPPING"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "8080"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "shipping"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  AGS_DESIRED = var.INSTANCE["SHIPPING"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["SHIPPING"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["SHIPPING"]["AGS_MIN"]
  LB_TYPE = "private"
  LB_ARN = module.lb.PRIVATE_LB_ARN
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  RDS_ENDPOINT = module.rds.RDS_ENDPOINT
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"

}

module "PAYMENT" {
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["PAYMENT"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "8080"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "payment"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  AGS_DESIRED = var.INSTANCE["PAYMENT"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["PAYMENT"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["PAYMENT"]["AGS_MIN"]
  LB_TYPE = "private"
  LB_ARN = module.lb.PRIVATE_LB_ARN
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"

}

module "DISPATCH" {
  source = "github.com/GurukaYadav/tf-module-immutable-app"
  INSTANCE_TYPE = var.INSTANCE["DISPATCH"]["INSTANCE_TYPE"]
  PRIVATE_SUBNET_ID = module.vpc.PRIVATE_SUBNET_ID
  PORT = "8080"
  VPC_ID = module.vpc.VPC_ID
  SSH_PORT = var.SSH_PORT
  WORKSTATION_IP = var.WORKSTATION
  COMPONENT = "dispatch"
  PROJECT = var.PROJECT
  ENV = var.ENV
  PRIVATE_SUBNET_CIDR = var.PRIVATE_SUBNET_CIDR
  AGS_DESIRED = var.INSTANCE["DISPATCH"]["AGS_DESIRED"]
  AGS_MAX = var.INSTANCE["DISPATCH"]["AGS_MAX"]
  AGS_MIN = var.INSTANCE["DISPATCH"]["AGS_MIN"]
  LB_TYPE = "private"
  LB_ARN = module.lb.PRIVATE_LB_ARN
  PRIVATE_HOSTED_ZONE_ID = var.PRIVATE_HOSTED_ZONE_ID
  PRIVATE_LB_DNS_NAME = module.lb.PRIVATE_LB_DNS_NAME
  PRIVATE_LISTENER_ARN = module.lb.PRIVATE_LISTENER_ARN
  PROMETHEUS_IP = var.PROMETHEUS
  APP_VERSION = "2.0.0"

}

